-- PRECOUNT
SELECT COUNT(*) 
FROM STAGE.CARS;

--CREATING FULL LOAD STORE PROCEDURE

----- CREATING THE TARGET TABLE 
CREATE TABLE [target].[cars](
	[Make] [nvarchar](max) NULL,
	[Model] [nvarchar](max) NULL,
	[Type] [nvarchar](max) NULL,
	[Origin] [nvarchar](max) NULL,
	[DriveTrain] [nvarchar](max) NULL,
	[Length] [nvarchar](max) NULL,
	Inserted_date DATETIME,
	[Inserted_by] [nvarchar](max) NULL,
	Modified_date DATETIME,
	[Modified_by] [nvarchar](max) NULL
);
--THE FULL LOAD STORED PROCEDURE 
GO
CREATE PROC SP_FL_AIRPLAINE
AS 
BEGIN 
	TRUNCATE TABLE TARGET.CARS 
	INSERT INTO TARGET.CARS 
	SELECT
	MAKE,
	MODEL,
	TYPE,
	ORIGIN,
	DRIVETRAIN,
	LENGTH,
	CURRENT_TIMESTAMP AS INSERTED_DATE,
	SUSER_SNAME() AS INSERTED_BY,
	CURRENT_TIMESTAMP AS MODIFIED_DATE,
	SUSER_SNAME() AS MODIFIED_BY
	FROM STAGE.CARS;
END

--DATA VALIDATION
SELECT COUNT(1)
FROM TARGET.CARS;

-- CREATING ENCREMENTAL LOAD STRORE PROCEDURE
-- DETERMINE A KEY THAT UNIQUELY IDENTIFY THE TABLED

SELECT * FROM STAGE.CARS;

-- IDENTIFING A UNIQUE COMPOSITE KEY
SELECT COUNT(DISTINCT CONCAT(MODEL, DRIVETRAIN, LENGTH)) AS COMP_KEY
FROM STAGE.CARS;

-- INCREMENTAL LOAD STORED PROCEDURE 
GO
CREATE PROC SP_INCR_LOADING_CARS
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        -- MERGE operation
        MERGE INTO TARGET.CARS AS TARGET
        USING STAGE.CARS AS SOURCE
        ON 
            TARGET.MODEL = SOURCE.MODEL AND
            TARGET.LENGTH = SOURCE.LENGTH AND
            TARGET.DRIVETRAIN = SOURCE.DRIVETRAIN

        WHEN MATCHED THEN
            UPDATE SET 
                TARGET.MAKE = SOURCE.MAKE,
                TARGET.TYPE = SOURCE.TYPE,
                TARGET.ORIGIN = SOURCE.ORIGIN,
                TARGET.INSERTED_DATE = CURRENT_TIMESTAMP,
                TARGET.INSERTED_BY = SUSER_SNAME(),
                TARGET.MODIFIED_DATE = GETDATE(),
                TARGET.MODIFIED_BY = SUSER_SNAME()

        WHEN NOT MATCHED THEN
            INSERT (MODEL, MAKE, TYPE, ORIGIN, DRIVETRAIN, LENGTH
                    , INSERTED_DATE, INSERTED_BY, MODIFIED_DATE, MODIFIED_BY)
            VALUES (
                SOURCE.MODEL,
                SOURCE.MAKE,
                SOURCE.TYPE,
                SOURCE.ORIGIN,
                SOURCE.DRIVETRAIN,  
                SOURCE.LENGTH,
                CURRENT_TIMESTAMP,  -- Or use SOURCE.INSERTED_DATE if available
                SUSER_SNAME(),
                GETDATE(),
                SUSER_SNAME()
            );

        PRINT 'MERGE OPERATION COMPLETED SUCCESSFULLY';
    END TRY
    BEGIN CATCH
        DECLARE @ErrMsg NVARCHAR(4000) = ERROR_MESSAGE();
        RAISERROR(@ErrMsg, 16, 1);
    END CATCH
END;

SELECT COUNT(*) FROM TARGET.CARS;
